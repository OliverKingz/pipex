{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.out",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Debug Pipex Bonus",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/pipex_bonus", // Replace with the path to your compiled executable
            "args": [
                "infile",
                "ls -l",
                "wc -l",
                "outfile"
            ], // Replace with the arguments you need to pass to your program
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build", // Ensure you have a corresponding task in tasks.json to build your project
            "miDebuggerPath": "/usr/bin/gdb", // Path to gdb, adjust if necessary
            "logging": {
                "engineLogging": true
            }
        },
        {
            "name": "Valgrind Pipex Bonus",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/valgrind",
            "args": [
                "-s",
                "--leak-check=full",
                "--show-leak-kinds=all",
                "--track-origins=yes",
                "--trace-children=yes",
                "--track-fds=yes",
                "${workspaceFolder}/pipex_bonus",
                "infile",
                "ls -l",
                "wc -l",
                "outfile"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build", // Ensure you have a corresponding task in tasks.json to build your project
            "miDebuggerPath": "/usr/bin/gdb", // Path to gdb, adjust if necessary
            "logging": {
                "engineLogging": true
            }
        },
        {
            "name": "Run Pipex Bonus",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/pipex_bonus", // Replace with the path to your compiled executable
            "args": [
                "infile",
                "ls -l",
                "wc -l",
                "outfile"
            ], // Replace with the arguments you need to pass to your program
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build", // Ensure you have a corresponding task in tasks.json to build your project
            "miDebuggerPath": "/usr/bin/gdb", // Path to gdb, adjust if necessary
            "logging": {
                "engineLogging": true
            }
        }
    ]
}